const { Client, CommandInteraction, EmbedBuilder } = require("discord.js");

module.exports = {
  name: "serverinfo",
  description: "Informa√ß√£o sobre o servidor.",

  /**
   *
   * @param {Client} client
   * @param {CommandInteraction} interaction
   * @param {String[]} args
   */


  run: async (client, interaction, args, config) => {
    const verificationLevels = {
      0: 'Nenhum',
      1: 'Baixa',
      2: 'M√©dia',
      3: 'Alta',
      4: 'Muito alta'
    };

    const explicit = {
      0: 'Desabilitado',
      1: 'M√©dia',
      2: 'Alta',
    };

    const premiumTier = {
      0: `Esse servidor n√£o possui boost. üò•`,
      1: `N√≠vel 1`,
      2: `N√≠vel 2`,
      3: `N√≠vel 3`,
    }

    const regiao = {
      [`en-US`]: `EUA :flag_us: `, [`de`]: `Deutsch `, [`es-ES`]: `Espa√±ol `, [`fr`]: `Fran√ßais `, [`hr`]: `Hrvatski `, [`it`]: `Italiano `, [`pl`]: `Polski `, [`ro`]: `Rom√¢na `, [`vi`]: `Tieng Viet `, [`cs`]: `Cestina `,
      [`pt-BR`]: `Brasil :flag_br: `, [`da`]: `Dansk `, [`lt`]: `lietuviskai `, [`hu`]: `Magyar `, [`nl`]: `Nederlands `, [`no`]: `Norsk `, [`fi`]: `Suomi `, [`sv-SE`]: `Svenska `, [`tr`]: `Turk√ße `, [`el`]: `ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ `,
      [`bg`]: `–±—ä–ª–≥–∞—Ä—Å–∫–∏ `, [`ru`]: `–†—É—Å—Å–∫–∏–π `, [`uk`]: `–£–∫—Ä–∞√Ø–Ω—Å—å–∫–∞ `, [`hi`]: `‡§π‡§ø‡§Ç‡§¶‡•Ä `, [`th`]: `‡πÑ‡∏ó‡∏¢ `, [`zh-CN`]: `‰∏≠Êñá `, [`ja`]: `Êó•Êú¨Ë™û `, [`zh-TW`]: `ÁπÅÈ´î ‰∏≠Êñá `, [`ko`]: `ÌïúÍµ≠Ïñ¥ `,
    }

    const date = interaction.guild.createdAt
    const owner = await interaction.guild.fetchOwner();

    const embed = new EmbedBuilder()
      .setColor('#3086c9')
      .setThumbnail(interaction.guild.iconURL())
      .setTitle('üîç Informa√ß√µes do servidor')
      .addFields(
        {name: '**Nome:**', value: interaction.guild.name, inline: true},
        {name: '**ID:**', value: interaction.guild.id, inline: true},
        {name: '**Descri√ß√£o:**', value: interaction.guild.description || `Servidor n√£o possui descri√ß√£o`},
        {name: '**Dono(a):**', value:`<@${owner.id}>`},
        {name: '**Regi√£o:**', value: regiao[interaction.guild.preferredLocale]},
        {name: '**Canais**', value: `${interaction.guild.channels.cache.size}`, inline: true},
        {name: '**Cargos**', value: `${interaction.guild.roles.cache.size}`, inline: true},
        {name: '**Humanos |**', value: `${interaction.guild.members.cache.filter(member => !member.user.bot).size}`, inline: true},
        {name: '** Bots**', value: `${interaction.guild.members.cache.filter(member => member.user.bot).size}`, inline: true},
        {name: '**Canal de Regras:**', value: `<#${interaction.guild.rulesChannelId}>`},
        {name: 'N√≠vel de boost:', value: `${premiumTier[interaction.guild.premiumTier]}`},
        {name: '**N√≠vel de verifica√ß√£o:**', value: `${verificationLevels[interaction.guild.verificationLevel]}`},
        {name: '**Filtro de conteudo explicito:**', value: `${explicit[interaction.guild.explicitContentFilter]}`},
        {name: '**2FA:**', value: `${verificationLevels[interaction.guild.mfaLevel]}`},
        {name: '**Criado em:**', value: formatDate('DD/MM/YYYY', date)},
      )

      .setTimestamp()

    interaction.reply({ embeds: [embed] })
    .catch((err) => console.log(`erro ${err}`))
  },
};

/**
 * Formata a data passada para o padr√£o do Brasil.
 * @param {string} template
 * @param {Date=} [date]
 * @return {string}
 */
function formatDate(template, date) {
  var specs = 'YYYY:MM:DD:HH:mm:ss'.split(':')
  date = new Date(date || Date.now() - new Date().getTimezoneOffset() * 6e4)
  return date.toISOString().split(/[-:.TZ]/).reduce(function (template, item, i) {
    return template.split(specs[i]).join(item)
  }, template)
}